@page "/usuarios/novo"
@inject VendePraMim.Blazor.Services.UsuarioService UsuarioService
@inject NavigationManager NavManager
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Forms

<div class="container-sm mt-4" style="max-width: 500px;">
    <h3 class="mb-4">Novo Usuário</h3>
    <AuthorizeView>
        <Authorized>
            @if (!string.IsNullOrEmpty(erro))
            {
                <div class="alert alert-danger">@erro</div>
            }
            @if (!string.IsNullOrEmpty(sucesso))
            {
                <div class="alert alert-success">@sucesso</div>
            }
            <EditForm Model="usuario" OnValidSubmit="Salvar">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="mb-3">
                    <label class="form-label">Nome Completo</label>
                    <InputText class="form-control" @bind-Value="usuario.NomeCompleto" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Email</label>
                    <InputText class="form-control" @bind-Value="usuario.Email" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Senha</label>
                    <InputText class="form-control" @bind-Value="usuario.Senha" type="password" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Perfil</label>
                    <InputText class="form-control" @bind-Value="usuario.Role" />
                </div>
                <button class="btn btn-primary w-100" type="submit" disabled="@loading">
                    <span class="bi bi-check-circle me-1"></span>@((loading ? "Salvando..." : "Salvar"))
                </button>
            </EditForm>
        </Authorized>
        <NotAuthorized>
            <div class="alert alert-warning mt-4">Você precisa estar autenticado para criar usuários.</div>
        </NotAuthorized>
    </AuthorizeView>
</div>

@code {
    private UsuarioService.UsuarioRequest usuario = new();
    private string erro;
    private string sucesso;
    private bool loading;

    private async Task Salvar()
    {
        erro = sucesso = string.Empty;
        loading = true;
        var (ok, msg) = await UsuarioService.CriarAsync(usuario);
        loading = false;
        if (ok)
        {
            sucesso = "Usuário criado com sucesso!";
            await Task.Delay(1000);
            NavManager.NavigateTo("/usuarios");
        }
        else
        {
            erro = "Erro ao criar usuário: " + msg;
        }
    }
}
